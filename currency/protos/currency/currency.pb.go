// Code generated by protoc-gen-go. DO NOT EDIT.
// source: currency.proto

/*
Package currency is a generated protocol buffer package.

It is generated from these files:
	currency.proto

It has these top-level messages:
	RateRequest
	RateResponse
*/
package currency

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RateRequest struct {
	Base        string `protobuf:"bytes,1,opt,name=Base,json=base" json:"Base,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=Destination,json=destination" json:"Destination,omitempty"`
}

func (m *RateRequest) Reset()                    { *m = RateRequest{} }
func (m *RateRequest) String() string            { return proto.CompactTextString(m) }
func (*RateRequest) ProtoMessage()               {}
func (*RateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RateRequest) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *RateRequest) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type RateResponse struct {
	Rate float32 `protobuf:"fixed32,1,opt,name=Rate,json=rate" json:"Rate,omitempty"`
}

func (m *RateResponse) Reset()                    { *m = RateResponse{} }
func (m *RateResponse) String() string            { return proto.CompactTextString(m) }
func (*RateResponse) ProtoMessage()               {}
func (*RateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RateResponse) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func init() {
	proto.RegisterType((*RateRequest)(nil), "RateRequest")
	proto.RegisterType((*RateResponse)(nil), "RateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Currency service

type CurrencyClient interface {
	GetRate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateResponse, error)
}

type currencyClient struct {
	cc *grpc.ClientConn
}

func NewCurrencyClient(cc *grpc.ClientConn) CurrencyClient {
	return &currencyClient{cc}
}

func (c *currencyClient) GetRate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateResponse, error) {
	out := new(RateResponse)
	err := grpc.Invoke(ctx, "/Currency/GetRate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Currency service

type CurrencyServer interface {
	GetRate(context.Context, *RateRequest) (*RateResponse, error)
}

func RegisterCurrencyServer(s *grpc.Server, srv CurrencyServer) {
	s.RegisterService(&_Currency_serviceDesc, srv)
}

func _Currency_GetRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurrencyServer).GetRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Currency/GetRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurrencyServer).GetRate(ctx, req.(*RateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Currency_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Currency",
	HandlerType: (*CurrencyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRate",
			Handler:    _Currency_GetRate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "currency.proto",
}

func init() { proto.RegisterFile("currency.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2e, 0x2d, 0x2a,
	0x4a, 0xcd, 0x4b, 0xae, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe6, 0xe2, 0x0e, 0x4a,
	0x2c, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x71, 0x4a, 0x2c,
	0x4e, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x49, 0x4a, 0x2c, 0x4e, 0x15, 0x52, 0xe0,
	0xe2, 0x76, 0x49, 0x2d, 0x2e, 0xc9, 0xcc, 0x4b, 0x2c, 0xc9, 0xcc, 0xcf, 0x93, 0x60, 0x02, 0x4b,
	0x71, 0xa7, 0x20, 0x84, 0x94, 0x94, 0xb8, 0x78, 0x20, 0x86, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7,
	0x82, 0x4c, 0x01, 0xf1, 0xc1, 0xa6, 0x30, 0x05, 0xb1, 0x14, 0x25, 0x96, 0xa4, 0x1a, 0x19, 0x71,
	0x71, 0x38, 0x43, 0xad, 0x16, 0x52, 0xe3, 0x62, 0x77, 0x4f, 0x2d, 0x01, 0x29, 0x11, 0xe2, 0xd1,
	0x43, 0xb2, 0x5e, 0x8a, 0x57, 0x0f, 0xd9, 0x9c, 0x24, 0x36, 0xb0, 0x1b, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x39, 0xb0, 0xf2, 0xf2, 0xb5, 0x00, 0x00, 0x00,
}
